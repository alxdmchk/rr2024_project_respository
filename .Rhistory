# Load the necessary package
library(haven)
# Load the necessary package
library(haven)
library(dplyr)
library(ggplot2)
library(ggrepel)
library(broom)
library(stargazer)
df <- read_dta('https://github.com/QuantEcon/lecture-python/blob/master/source/_static/lecture_specific/ols/maketable1.dta?raw=true')
head(df)
summary(df)
# Assuming 'avexpr' and 'logpgp95' have missing values, we might decide to omit these for simplicity
df_clean <- df %>%
filter(!is.na(avexpr) & !is.na(logpgp95))
# Scatter plot of avexpr and logpgp95
ggplot(df, aes(x = avexpr, y = logpgp95)) +
geom_point() +
labs(title = "Relationship between Protection against Expropriation and GDP per Capita",
x = "Average Protection Against Expropriation (1985-95)",
y = "Log GDP per Capita (1995)") +
theme_minimal()
df_subset <- df_clean %>%
filter(baseco == 1)
# Scatter plot with country labels
ggplot(df_subset, aes(x = avexpr, y = logpgp95)) +
geom_point(color = "blue") +
geom_text_repel(aes(label = shortnam), size = 3) +
geom_smooth(method = "lm", se = FALSE, color = "black") +
scale_x_continuous(limits = c(3.3, 10.5)) +
scale_y_continuous(limits = c(4, 10.5)) +
labs(title = "Figure 2: OLS relationship between expropriation risk and income",
x = "Average Expropriation Risk 1985-95",
y = "Log GDP per capita, PPP, 1995") +
theme_minimal()
reg1 <- lm(logpgp95 ~ avexpr, data = df_clean)
summary_reg1 <- summary(reg1)
print(summary_reg1)
stargazer(reg1, type = "text", title = "OLS Regression Results")
mean_expr <- mean(df_subset$avexpr, na.rm = TRUE)
mean_expr
new_data <- data.frame(avexpr = mean_expr)
predicted_logpgp95 <- predict(reg1, newdata = new_data)
predicted_logpgp95
predicted_logpgp95 <- intercept + slope * avexpr_value
intercept <- 4.63
slope <- 0.53
avexpr_value <- 7.07
predicted_logpgp95 <- intercept + slope * avexpr_value
predicted_logpgp95
new_data <- data.frame(avexpr = mean_expr)
predicted_logpgp95 <- predict(reg1, newdata = new_data)
predicted_logpgp95
# Plot observed and predicted values
ggplot(df_clean, aes(x = avexpr)) +
geom_point(aes(y = logpgp95), alpha = 0.5, color = 'blue', label = 'observed') +
geom_point(aes(y = predicted_logpgp95), alpha = 0.5, color = 'red', label = 'predicted') +
labs(title = 'OLS predicted values',
x = 'avexpr',
y = 'logpgp95') +
theme_minimal() +
scale_color_manual(values = c("observed" = "blue", "predicted" = "red")) +
theme(legend.position = "bottom") +
guides(colour = guide_legend(override.aes = list(alpha = 1)))
# Multivariate regression model
# Import the data
df2 <- read_dta('https://github.com/QuantEcon/lecture-python/blob/master/source/_static/lecture_specific/ols/maketable2.dta?raw=true')
# Add constant term to dataset
df2 <- df2 %>%
mutate(const = 1)
# Create lists of variables to be used in each regression
X1 <- c('const', 'avexpr')
X2 <- c('const', 'avexpr', 'lat_abst')
X3 <- c('const', 'avexpr', 'lat_abst', 'asia', 'africa', 'other')
# Estimate an OLS regression for each set of variables
reg1 <- lm(logpgp95 ~ const + avexpr, data = df2)
reg2 <- lm(logpgp95 ~ const + avexpr + lat_abst, data = df2)
reg3 <- lm(logpgp95 ~ const + avexpr + lat_abst + asia + africa + other, data = df2)
# Summarize the results
summary(reg1)
summary(reg2)
summary(reg3)
# Create a summary table using stargazer
stargazer(reg1, reg2, reg3,
type = "text",
title = "Table 2 - OLS Regressions",
column.labels = c("Model 1", "Model 3", "Model 4"),
dep.var.labels = "logpgp95",
covariate.labels = c("Constant", "Average Expropriation Risk", "Latitude", "Asia", "Africa", "Other"),
keep.stat = c("n", "rsq"),
float = TRUE,
float.env = "table",
digits = 2)
git commit -m "Remove rr_project.Rmd"
git commit -m "Remove rr_project.Rmd"
